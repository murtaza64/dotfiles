# ZSH_ROOT=~/.config/zsh
# This should be set in .zshenv

# move prompt to bottom
printf '\n%.0s' {1..100}

export PATH=$(dirname $ZSH_ROOT)/bin:$PATH

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

autoload -Uz compinit
compinit
ZSHRCLOG=0
function log {
    if [[ $ZSHRCLOG -ne 0 ]]; then
        echo "zshrc: $1"
    fi
}

# borrowed from oh-my-zsh
# init some plugins, options and prompt theme
ZSH_ALIAS_FINDER_AUTOMATIC=true
# for zshfile ($ZSH_ROOT/*.zsh); do
#     source $zshfile
# done

source $ZSH_ROOT/aliases.zsh
source $ZSH_ROOT/completion.zsh
source $ZSH_ROOT/git.zsh
# source $ZSH_ROOT/git.plugin.zsh
source $ZSH_ROOT/history.zsh
source $ZSH_ROOT/key-bindings.zsh
source $ZSH_ROOT/spectrum.zsh
source $ZSH_ROOT/termsupport.zsh
source $ZSH_ROOT/theme-and-appearance.zsh

source $ZSH_ROOT/wezterm.sh

# source $ZSH_ROOT/murtaza.zsh-theme

source $ZSH_ROOT/powerlevel10k/powerlevel10k.zsh-theme

function zvm_config() {
    ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
}

source $ZSH_ROOT/zsh-vi-mode/zsh-vi-mode.plugin.zsh

function push-and-insert() {
    zle push-line
    zle vi-insert
}
zle -N push-and-insert
function copy-command-line-to-tmux() {
    echo -n $BUFFER | tmux-copy
    tmux display-message "Copied: $BUFFER"
}
zle -N copy-command-line-to-tmux
function zvm_after_lazy_keybindings() {
    bindkey -M vicmd 'D' push-and-insert
    bindkey -M vicmd 'yy' copy-command-line-to-tmux
    bindkey -s -M vicmd 'n' "D^M"
    bindkey -s -M vicmd '^N' "vv"
}


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f $ZSH_ROOT/.p10k.zsh ]] || source $ZSH_ROOT/.p10k.zsh

# custom aliases
alias less='less --mouse --wheel-lines 3'
export PAGER='less --mouse --wheel-lines 3'
alias grep='grep --color=auto'

export MANPAGER='nvim +Man!'

# don't beep when triggering menu complete
unsetopt LIST_BEEP

# fuck
if command -v thefuck >/dev/null; then
    eval $(thefuck --alias)
else
    log "thefuck not found"
fi

# pyenv
if [[ -a $HOME/.pyenv ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
else
    log "pyenv not found"
fi

# fzf
if [[ -d "/usr/share/doc/fzf" ]]; then
    source /usr/share/doc/fzf/examples/completion.zsh
    # source /usr/share/doc/fzf/examples/key-bindings.zsh
    # export FZF_DEFAULT_OPTS="--multi --bind 'ctrl-a:select-all'"
elif [[ -d "/usr/share/fzf" ]]; then
    source /usr/share/fzf/completion.zsh
    # source /usr/share/fzf/key-bindings.zsh
else
    log "fzf not found"
fi
export FZF_DEFAULT_OPTS=" \
 --prompt='  ' --pointer=' ' \
--color=spinner:#f5e0dc,gutter:-1,bg+:-1,hl:red,hl+:red \
--color=header:#f38ba8,info:magenta,fg+:yellow,pointer:yellow \
--color=marker:#f5e0dc,prompt:magenta,query:magenta \
--info inline-right"


function show_colors {
    for i in {0..255}; do 
        print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}
    done
}



fzf-history-widget() {
    local selected num
    setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
    selected=( $( fc -rlt %s 1 | sed "s/^[ \t]*//" \
        | awk '!seen[$0]++' \
        | fzf --with-nth=3.. --preview='echo {1}"\t$(time_ago {2})"' \
        --preview-window=down:1 \
        --height=16 --tiebreak=index --query=${LBUFFER} +m) )
    # selected=( $(fc -rl 1 |
    #   FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
    local ret=$?
    if [ -n "$selected" ]; then
        echo $selected
        num=$selected[1]
        if [ -n "$num" ]; then
            zle vi-fetch-history -n $num
        fi
    fi
    zle reset-prompt
    return $ret
}

# These are now set in zvm_after_init
# zle     -N   fzf-history-widget
# bindkey '^R' fzf-history-widget

# My history widget is made obsolete by builtin fzf functionality :(
# function h {
#     local fzf_options=(--border=rounded --border-label="zsh history" 
#          --border-label-pos=bottom)
#     if [ "$#" -eq 0 ]; then
#         local cmd=$(history | sed "s/^[ \t]*//" \
#             | sed "s/^[0-9*]\+\s\+//" | tac | awk '!seen[$0]++' | fzf $fzf_options --tiebreak=index)
#     else
#         local cmd=$(history | sed "s/^[ \t]*//" \
#             | sed "s/^[0-9*]\+\s\+//" | tac | awk '!seen[$0]++' | fzf $fzf_options \
#             --tiebreak=index -q ${(j[ ])@})
#     fi
#     if [[ ! -z $cmd ]]; then
#         zle -U $cmd 2> /dev/null || print -z $cmd
#     else
#         return 2
#     fi
# }
# zle -N interactive-history h
# bindkey '^[h' interactive-history

# must be sourced at the end
# source $ZSH_ROOT/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

commit-search() {
    local res=$(git log "origin/master" HEAD --pretty=oneline-custom --date=short --color=always \
        | fzf --ansi | cut -d' ' -f1)
    if [ -n "$res" ]; then
        local commit=$(echo $res | awk '{print $1}')
        # first char of RBUFFER + commit + rest of RBUFFER
        RBUFFER="${RBUFFER:0:1}$commit${RBUFFER:1}"
        # LBUFFER+="$commit"
    fi
    zle reset-prompt
}

clear-and-move-bottom() {
    clear
    printf '\n%.0s' {1..100}
    zle reset-prompt
}

function zvm_after_init() {
    zle     -N   fzf-history-widget
    bindkey '^R' fzf-history-widget
    zle     -N   clear-and-move-bottom
    bindkey '^L' clear-and-move-bottom
    zle     -N   commit-search
    bindkey -s '^N' "\evv"
}
